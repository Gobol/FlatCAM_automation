# CREATE A NEW FLATCAM TCL SCRIPT
# TCL Tutorial is here:
# https://www.tcl.tk/man/tcl8.5/tutorial/tcltutorial.html
 
# kicad_name = kicad project name / folder name 
# kicad_path = kicad's projects path 
# track_z_cut = gerber isolation z_cut depth
# annot_z_cut = Eco1 & Eco2 layer paint z_cut 
# track_xy_feed = isolation carving speed 
# z_feedrate = isolation Z plunge speed
# mirror_axis = mirror axis for two sided boards (Y = left<->right, X = top<->bottom) 
# shallow_hole_diam_front = diameter of holes (excellon) which will be drilled shallow from FRONT side of PCB (up to shallow_hole_depth) - useful for some PCB stuff I made
# shallow_hole_diam_back = the same, but BACK side of PCB
# thruhole_z - depth of holes 
# cutout_z_cut - depth of cutout (should equal PCB thickness+0.1mm)

# DEFINE PROJECT NAME AND PATH (without trailing slash) --------------------------------------------------------------------------------------------------------------------

# << PROJECT NAME (DIRECTORY NAME) >>
set kicad_name "migacz"

# << PROJECT PATH >>
set kicad_path "/mnt/kicads/4Tom"

# << OUTPUT PATH, if empty - equals to PROJECT PATH, if doesn't exist - CREATE ONE >>
set output_path "/mnt/Frezarra"

# PROCESSING DETAILS
set track_z_cut -0.05
set annot_z_cut -0.05
set track_xy_feed 300
set z_feedrate 100	
set mirror_axis "Y"
set shallow_hole_diam_front 0.3
set shallow_hole_diam_back 0.35
set shallow_hole_depth -0.5
set thruhole_z -1.8
set cutout_z_cut -1.8
set cutout_cut_per_pass 0.9
set cutout_feedrate_xy 120
set cutout_feedrate_z 80
set align_holes_depth -6
set align_holes_dia 1.5
set spindle_rpm 1000
set spindle_dwell 2


# CLEAR PROJECT but do not delete script ;)
set objnames [split [get_names] "\n" ]; list 

set i 0
set l_obj [llength $objnames]
while {$i < $l_obj} {
 set obj [lindex $objnames $i]
 if !{[string match "*.FlatScript" $obj]} {
  delete $obj -f 1
 }
 incr i
}

# SET UP PATHS AND FILENAMES
set kicad_gerber_path "$kicad_path/$kicad_name/gerber"; list
if {$output_path != ""} {
   set flatcam_output_path "$output_path/$kicad_name"
   file mkdir $flatcam_output_path
} else  {
   set flatcam_output_path "$kicad_gerber_path"
} 
set gerber_front_copper "$kicad_gerber_path/$kicad_name-F_Cu.gbr"; list
set gerber_back_copper "$kicad_gerber_path/$kicad_name-B_Cu.gbr"; list
set gerber_cutout "$kicad_gerber_path/$kicad_name-Edge_Cuts.gbr"; list
set gerber_drills_pth "$kicad_gerber_path/$kicad_name-PTH.drl"; list
set gerber_front_annot "$kicad_gerber_path/$kicad_name-Eco1_User.gbr"; list
set gerber_back_annot "$kicad_gerber_path/$kicad_name-Eco2_User.gbr"; list

#OPEN SOURCE FILES 
open_gerber $gerber_front_copper -outname FrontCopper
open_gerber $gerber_back_copper -outname BackCopper
open_gerber $gerber_cutout -outname CutOut
open_gerber $gerber_back_annot -outname BackAnnot
open_gerber $gerber_front_annot -outname FrontAnnot
open_excellon $gerber_drills_pth -outname Holes

#1. ISOLATE FRONT COPPER
isolate "FrontCopper" -dia 0.1479 -passes 2 -overlap 0.4 -combine 1 -outname "FrontCopper_iso"
cncjob "FrontCopper_iso" -dia 0.1 -z_cut $track_z_cut -z_move 1 -feedrate $track_xy_feed -feedrate_z $z_feedrate -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endxy 0,0 -endz 30 -pp "grbl_11" -outname "FrontCopper_iso_cnc"
write_gcode "FrontCopper_iso_cnc" "$flatcam_output_path/1_45V_FrontCopper.nc"
 
#1a. ENGRAVE FRONT ANNOTATIONS with same tool (negative/carved-out text on copper) - Eco1_User layer
if {[lsearch [get_names] FrontAnnot]>=0} {
    paint "FrontAnnot" -tooldia 0.1 -offset 0 -method 'seed' -all -outname "FrontAnnot_paint"
    cncjob "FrontAnnot_paint" -dia 0.1 -z_cut $annot_z_cut -z_move 1 -feedrate $track_xy_feed -feedrate_z $z_feedrate -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endxy 0,0 -endz 30 -pp "grbl_11" -outname "FrontAnnot_paint_cnc"
    write_gcode "FrontAnnot_paint_cnc" "$flatcam_output_path/1a_45V_FrontAnnot.nc"
}

#2. CREATE ALIGNMENT DRILLS
if {[lsearch [get_names] CutOut]>=0} {
if {[lsearch [get_names] BackCopper]>=0} {
    aligndrill "CutOut" -axis $mirror_axis -box "CutOut" -dia $align_holes_dia -grid 1 -gridoffset 1 -minoffset 1 -outname "AlignmentDrills"
    drillcncjob "AlignmentDrills" -drilled_dias $align_holes_dia -diatol 5 -drillz $align_holes_depth -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "AlignmentDrills_cnc"
    write_gcode "AlignmentDrills_cnc" "$flatcam_output_path/2_1D5_AlignmentDrills.nc"
}
}

#3. DRILL SHALLOW HOLES on FRONT copper (those with 0.3mm, those of 0.35mm are drilled on BACK)
if {[lsearch [get_names] Holes]>=0} {
    drillcncjob "Holes" -drilled_dias $shallow_hole_diam_front -diatol 5 -drillz $shallow_hole_depth -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "FrontShallowDrills_cnc"
    write_gcode "FrontShallowDrills_cnc" "$flatcam_output_path/3_0D6_FrontShallowDrills.nc"
}

# DO WE HAVE BACKCOPPER ?? - ie. two sided board requested

#!!! ROTATE BOARD on $MIRROR_AXIS using Alignment holes !!!

#4. MIRROR & ISOLATE BACK COPPER
if {[lsearch [get_names] BackCopper]>=0} {
    mirror "BackCopper" -box "CutOut" -axis $mirror_axis
    isolate "BackCopper" -dia 0.1479 -passes 2 -overlap 0.4 -combine 1 -outname "BackCopper_iso"
    cncjob "BackCopper_iso" -dia 0.1 -z_cut $track_z_cut -z_move 1 -feedrate $track_xy_feed -feedrate_z $z_feedrate -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endxy 0,0 -endz 30 -pp "grbl_11" -outname "BackCopper_iso_cnc"
    write_gcode "BackCopper_iso_cnc" "$flatcam_output_path/4M_45V_BackCopper.nc"

#4a. MIRROR & PAINT BACK ANNOTATIONS (Eco2_User) layer
if {[lsearch [get_names] BackAnnot]>=0} {
    mirror "BackAnnot" -box "CutOut" -axis $mirror_axis
    paint "BackAnnot" -tooldia 0.1 -offset 0 -method 'standard' -all -outname "BackAnnot_paint"
    cncjob "BackAnnot_paint" -dia 0.1 -z_cut $annot_z_cut -z_move 1 -feedrate $track_xy_feed -feedrate_z $z_feedrate -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endxy 0,0 -endz 30 -pp "grbl_11" -outname "BackAnnot_paint_cnc"
    write_gcode "BackAnnot_paint_cnc" "$flatcam_output_path/5M_45V_BackAnnot.nc"
}

#5. MIRROR HOLES, DRILL 1.0mm then 0.6mm then SHALLOW 0.6mm on BACK (coded as 0.35mm)
if {[lsearch [get_names] Holes]>=0} {
    mirror "Holes" -box "CutOut" -axis $mirror_axis
    drillcncjob "Holes" -drilled_dias 1.0 -diatol 5 -drillz $thruhole_z -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "Holes1.0mm_cnc"
    write_gcode "Holes1.0mm_cnc" "$flatcam_output_path/6M_1D0_Holes1mm0.nc"
    drillcncjob "Holes" -drilled_dias 0.6 -diatol 5 -drillz $thruhole_z -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "Holes0.6mm_cnc"
    write_gcode "Holes0.6mm_cnc" "$flatcam_output_path/7M_0D6_Holes0mm6.nc"
    drillcncjob "Holes" -drilled_dias $shallow_hole_diam_back -diatol 5 -drillz $shallow_hole_depth -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "BackShallowDrills_cnc"
    write_gcode "BackShallowDrills_cnc" "$flatcam_output_path/8M_0D6_BackShallowDrills.nc"
}

#6. CUTOUT 
if {[lsearch [get_names] CutOut]>=0} {
    mirror "CutOut" -box "CutOut" -axis $mirror_axis
    geocutout "CutOut" -dia 1.5 -gapsize 0 -gaps "lr" -outname "CutOut_geo"
    cncjob "CutOut_geo" -dia 1.5 -z_cut $cutout_z_cut -z_move 1 -feedrate $cutout_feedrate_xy -feedrate_z $cutout_feedrate_z -dpp $cutout_cut_per_pass -endxy 0,0 -endz 30 -pp "grbl_11" -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -outname "CutOut_geo_cnc"
    write_gcode "CutOut_geo_cnc" "$flatcam_output_path/9M_1F5_CutOut.nc"
}
} else {  # if BackCopper object exist ?

# NO BACKCOPPER object - single sided version 

 if {[lsearch [get_names] Holes]>=0} {
    drillcncjob "Holes" -drilled_dias 1.0 -diatol 5 -drillz $thruhole_z -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "Holes1.0mm_cnc"
    write_gcode "Holes1.0mm_cnc" "$flatcam_output_path/6M_1D0_Holes1mm0.nc"
    drillcncjob "Holes" -drilled_dias 0.6 -diatol 5 -drillz $thruhole_z -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "Holes0.6mm_cnc"
    write_gcode "Holes0.6mm_cnc" "$flatcam_output_path/7M_0D6_Holes0mm6.nc"
    drillcncjob "Holes" -drilled_dias $shallow_hole_diam_back -diatol 5 -drillz $shallow_hole_depth -travelz 1 -feedrate_z 80 -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -endz 30 -endxy 0,0 -outname "BackShallowDrills_cnc"
    write_gcode "BackShallowDrills_cnc" "$flatcam_output_path/8M_0D6_BackShallowDrills.nc"
}

#6. CUTOUT 
if {[lsearch [get_names] CutOut]>=0} {
    geocutout "CutOut" -dia 1.5 -gapsize 0 -gaps "lr" -outname "CutOut_geo"
    cncjob "CutOut_geo" -dia 1.5 -z_cut $cutout_z_cut -z_move 1 -feedrate $cutout_feedrate_xy -feedrate_z $cutout_feedrate_z -dpp $cutout_cut_per_pass -endxy 0,0 -endz 30 -pp "grbl_11" -spindlespeed $spindle_rpm -dwelltime $spindle_dwell -outname "CutOut_geo_cnc"
    write_gcode "CutOut_geo_cnc" "$flatcam_output_path/9M_1F5_CutOut.nc"
}
}


plot_all 




